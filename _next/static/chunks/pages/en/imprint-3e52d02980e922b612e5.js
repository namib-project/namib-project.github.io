_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[9],{"7ubu":function(e){e.exports=JSON.parse('{"hero":{"title":"We aim to improve the security and interoperability of devices in the <0>Internet of Things (IoT)</0>.","subtitle":"A master project at the University of Bremen."},"section-two":{"title":"Software that makes IoT security more accessible","subtitle":"For this, we looked in particular at two standards for the \\"self-description\\" of IoT devices.","list":{"0":"A <0>Manufacturer Usage Description (MUD)</0> allows devices to specify what communication authority they require, which can be used to automatically configure firewalls and other security mechanisms.","1":"These measures can prevent undesirable as well as harmful behavior of IoT devices.","2":"For the implementation of <0>MUD</0>, we have developed suitable components that, on the one hand, take care of the configuration, but also allow manual device management via a front end.","3":"By means of our \\"Legacy-Service\\", older devices without <0>MUD</0> support can be taken into account aswell."}},"section-three":{"title":"What about interoperability?","description":"To improve interoperability, we primarily looked at the <0>Thing Descriptions (TDs)</0> of the <1>Web of Things</1> standard, which are standardized interface descriptions intended to facilitate interaction between devices and make them vendor-independent."},"section-four":{"title":"A hotel scenario as a proof of concept","description":"Guests visit a hotel and want to access IoT devices provided in their booked rooms. At check-in, they receive credentials for the hotel\'s authorization server, register themselves with their cell phones, and upon completion can access the IoT devices in their booked rooms. Access for each guest is limited to devices in their rooms, is restricted to certain functions and ends as soon as the guest checks out."},"components":{"title":"Which groups and components are part of NAMIB?","hotels":{"title":"HOTELS","description":"The HOTELS group (Hosts Offering Things and Enforcing Local Security) has primarily dealt with the secure and interoperable usage of IoT devices. The implementations were done on the basis of the <0>ACE-OAuth</0>, <1>CoRE Resource Directory</1> and <2>Web of Things</2> standards. As part of the scenario, we also want to look at how new devices can be added to this infrastructure.","description2":"For this purpose, we are also dealing with the recently published standard EAP-NOOB (<0>RFC 9140</0>) for the integration of devices into wireless networks using out-of-band messages. Additionally, we are developing, among other things, a modification of the basic principle of EAP-NOOB called <1>EAP-UTE</1>.","authorization":{"title":"Authorization server","dcaf-rs":"Implementation of ACE-OAuth  in Rust (data model integrated in CBOR/COSE).","canephora":"Implementation of ACE-OAuth (authorization server) in Rust.","tinydtls-rs":"Bindings around tinydtls for Rust.","libcoap-rs":"Bindings around libcoap for Rust."},"client":{"title":"Guest client","description":"Mobile app in Flutter, responsible for communication with IoT devices, resource directory and authorization server.","dart_dcaf":"Implementation of ACE-OAuth in Dart.","dart_tinydtls":"Bindings around tinydtls in Dart.","dart_wot":"Web Of Things implementation in Dart."}},"reverse":{"title":"Reverse Engineering","description":"The reverse engineering group deals with the management of IoT devices that have no (official) MUD specification. We plan to create a toolbox that can be used to create and publish MUD specifications for IoT devices. As a further security measure, we are developing a machine learning-based system to detect anomalies in IoT device traffic.","mudsights":{"title":"MUDsights","description":"Application for hotel employees to manage and monitor the IoT devices in the guest rooms. These include the ability to quarantine devices and display anomalies.","toolbox":"Extension for editing and automatic creation of MUD files for devices in the local network."},"shai":{"title":"shai","description":"Machine learning based classifiers to analyze network traffic and detect abnormal behavior of IoT devices.","netimg":"Collection of generated PNG images, based on the CSE-CIC-IDS2018 dataset, for image classifiers."},"ldr":{"title":"Legacy Device Recognition","description":"Coming soon\u2122"}},"subnet":{"title":"Subnet Enforcing","description":"Subnet Enforcing is responsible for the implementation of (MUD) policies, especially in the local context. For this purpose, we manage the central (MUD-related) components of NAMIB: controller and enforcer.","controller":{"title":"Controller","description":"MUD-Manager","description2":"generates firewall rules from MUD files"},"enforcer":{"title":"Enforcer","description":"Service extension for OpenWRT routers","description2":"applies generated firewall rules (by nftnl) to nf_tables"},"muddles":{"title":"muddles","description":"Prototype implementation of a MUD language server in Rust (with tower-lsp). It supports, for example, the auto-completion of policy names and warns when YANG ACL features are used that MUD does not support."}}},"cta":{"title":"Sounds Interesting?","button-label":{"bachelor":"To the digital Bachelor project day","master":"To the Master project day"}},"imprint":{"title":"Imprint","contact-inquiries":"Contact requests to","enable-js":"Enable JavaScript to view email address"},"projekttag":{"bachelor-title":"Bachelor project day","master-title":"Master project day","redirecting":"Redirecting...","no-js-click-here":"Click here if you have JavaScript disabled:"}}')},K2iV:function(e,t,i){"use strict";var n=i("nKUr"),o=i("h4VS"),r=i("apO0"),a=i("q1tI"),s=i("BIX1"),c=i.n(s);function l(){var e=Object(o.a)(["common:imprint.contact-inquiries"]);return l=function(){return e},e}function d(){var e=Object(o.a)(["common:imprint.title"]);return d=function(){return e},e}function u(){var e=Object(o.a)(["common:imprint.enable-js"]);return u=function(){return e},e}t.a=function(){var e=c()().t,t=Object(a.useState)(Object(n.jsx)("span",{className:"italic text-red-400",children:e(u())})),i=t[0],o=t[1];return Object(a.useEffect)((function(){o(Object(n.jsx)("a",{className:"text-blue-namib",href:"mailto:namib-master@informatik.uni-bremen.de",children:"namib-master@informatik.uni-bremen.de"}))}),[]),Object(n.jsx)(r.a,{childrenInScreenVH:Object(n.jsxs)("section",{children:[Object(n.jsx)("h1",{className:"mb-8 md:mb-16 max-w-4xl xl:max-w-7xl",children:e(d())}),Object(n.jsxs)("p",{className:"font-medium text-xl md:text-3xl leading-snug md:leading-snug mb-6",children:[e(l())," ",i]}),Object(n.jsxs)("p",{className:"font-medium text-xl md:text-3xl mb-16 leading-snug md:leading-snug",children:["Universit\xe4t Bremen ",Object(n.jsx)("br",{}),"Fachbereich 03 Informatik ",Object(n.jsx)("br",{}),"AG Rechnernetze ",Object(n.jsx)("br",{}),"Postfach 330 440 ",Object(n.jsx)("br",{}),"28334 Bremen"]})]})})}},wc3g:function(e,t,i){"use strict";i.r(t),i.d(t,"default",(function(){return h}));var n=i("rePB"),o=i("nKUr"),r=i("MA9B"),a=i.n(r),s=(i("q1tI"),i("K2iV")),c=i("7ubu");function l(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function d(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?l(Object(i),!0).forEach((function(t){Object(n.a)(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}var u={common:c};function h(e){return Object(o.jsx)(a.a,{lang:"en",namespaces:u,internals:{defaultLanguage:"de",isStaticMode:!0},false:!0,children:Object(o.jsx)(s.a,d({},e))})}h=Object.assign(h,d({},s.a)),s.a&&s.a.getInitialProps&&(h.getInitialProps=function(e){return s.a.getInitialProps(d(d({},e),{},{lang:"en"}))})},zDTJ:function(e,t,i){(window.__NEXT_P=window.__NEXT_P||[]).push(["/en/imprint",function(){return i("wc3g")}])}},[["zDTJ",0,2,1,3]]]);