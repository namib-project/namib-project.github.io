{
    "hero": {
        "title": "Wir haben das Ziel, die Sicherheit und Interoperabilität von Geräten im <0>Internet of Things (IoT)</0> zu verbessern.",
        "subtitle": "Ein Master-Projekt an der Universität Bremen."
    },
    "section-two": {
        "title": "Software, welche IoT-Sicherheit zugänglicher macht",
        "subtitle": "Hierfür haben wir uns insbesondere mit zwei Standards für die \"Selbstbeschreibung\" von IoT-Geräten beschäftigt.",
        "list": {
            "0": "Über eine <0>Manufacturer Usage Description</0> (MUD) können Geräte angeben, welche Kommunikationsbefugnisse sie benötigen, was für die automatische Konfiguration von Firewalls und andere Sicherheitsmechanismen dienen kann.",
            "1": "Durch diese Maßnahmen kann unerwünschtes sowie schädliches Verhalten von IoT-Geräten unterbunden werden.",
            "2": "Für die Umsetzung von <0>MUD</0> haben wir passende Komponenten entwickelt, die einerseits die Konfiguration übernehmen, aber auch die manuelle Geräteverwaltung über ein Frontend erlauben.",
            "3": "Mittels unseres \"Legacy-Services\" können ältere Geräte ohne MUD-Unterstützung berücksichtigt werden."
        }
    },
    "section-three": {
        "title": "Was ist mit der Interoperabilität?",
        "description": "Für die Verbesserung der Interoperabilität haben wir uns vor allem mit den <0>Thing Descriptions</0> (TDs) des <1>Web of Things</1>-Standards auseinandergesetzt, die als standardisierte Schnittstellenbeschreibungen die Interaktion zwischen Geräten erleichtern und herstellerunabhängig gestalten sollen."
    },
    "section-four": {
        "title": "Das Hotel-Szenario als Proof of Concept",
        "description": "Ein Gast besucht ein Hotel und möchte in diesem Hotel auf dort bereitgestellte IoT-Geräte zugreifen. Hierfür bekommt dieser beim Einchecken Zugangsdaten für den Autorisierungsserver des Hotels, meldet sich dort mit z.B. seinem Handy an und kann anschließend auf die IoT-Geräte im gebuchten Zimmer zugreifen. Der Zugang ist dabei beschränkt auf Geräte in diesem Zimmer, reduziert auf bestimmte Funktionen und endet, sobald der Gast auscheckt."
    },
    "components": {
        "title": "Welche Gruppen und Komponenten gehören zu NAMIB?",
        "hotels": {
            "title": "HOTELS",
            "description": "Die HOTELS-Gruppe (Hosts Offering Things and Enforcing Local Security) hat sich vornehmlich mit der sicheren und interoperablen Nutzung von IoT-Geräten beschäftigt. Das Ganze wird auf Basis der <0>ACE-OAuth-</0>, <1>CoRE Resource Directory-</1> und der <2>Web of Things</2>-Standards umgesetzt. Gleichzeitig möchten wir im Rahmen des Szenarios auch betrachten, wie neue Geräte zu dieser Infrastruktur hinzugefügt werden können.",
            "description2": "Hierfür befassen wir uns unter anderem auch mit dem kürzlich veröffentlichten Standard EAP-NOOB (<0>RFC 9140</0>) für die Einbindung von Geräten in drahtlose Netze mithilfe von Out-of-Band-Nachrichten und erarbeiten dabei unter anderem eine Abwandlung des dort verwendeten Grundprinzips in der Form von <1>EAP-UTE</1>.",
            "authorization": {
                "title": "Authorisierungsserver",
                "dcaf-rs": "ACE-OAuth-Implementierung (Datenmodell mit CBOR-/COSE-Integration) in Rust.",
                "canephora": "ACE-OAuth-Implementierung (Autorisierungsserver) in Rust.",
                "tinydtls-rs": "Bindings zu tinydtls in Rust.",
                "libcoap-rs": "Bindings zu libcoap in Rust."
            },
            "client": {
                "title": "Gastclient",
                "description": "Mobile App in Flutter, kümmert sich um die Kommunikation mit den IoT-Geräten, dem Resource Directory und dem Autorisierungsserver.",
                "dart_dcaf": "ACE-OAuth-Implementierung in Dart.",
                "dart_tinydtls": "Bindings zu tinydtls in Dart.",
                "dart_wot": "Web Of Things Implementierung in Dart."
            }
        },
        "reverse": {
            "title": "Reverse Engineering",
            "description": "Die Reverse Engineering Gruppe befasst sich größtenteils mit der Handhabung von IoT-Geräten, für die keine (offizielle) MUD-Spezifikation existiert. Dazu ist geplant, Interessierten eine Toolbox an die Hand zu geben, mit der MUD-Spezifikationen für IoT-Geräte erstellt und veröffentlicht werden können. Als weitere Sicherheitsmaßnahme entwickeln wir ein System auf Basis maschinellem Lernens um Anomalien von IoT-Geräten zu erkennen.",
            "mudsights": {
                "title": "MUDsights",
                "description": "Applikation für Hotelmitarbeiter zur Verwaltung und Analyse der IoT-Geräte in den Gästezimmern. Darunter die Möglichkeit Geräte zu quarantänisieren sowie die Anzeige von Anomalien.",
                "toolbox": "Erweiterung, mit der MUD-Dateien für Geräte im lokalen Netzwerk bearbeitet und automatisiert erstellt werden können."
            },
            "shai": {
                "title": "shai",
                "description": "Machine Learning basierte Klassifikatoren zur Analyse des Netzverkehres und zur Detektion von anomalen Verhalten der IoT Geräte.",
                "netimg": "Sammlung an generierten PNG-Bildern aus dem CSE-CIC-IDS2018 Datensatz zum Trainieren von Bildklassifikatoren."
            },
            "ldr": {
                "title": "Legacy Device Recognition",
                "description": "Coming soon™"
            }
        },
        "subnet": {
            "title": "Subnet Enforcing",
            "description": "Subnet-Enforcing beschäftigt sich mit der Umsetzung von (MUD-)Policies insbesondere im lokalen Kontext. In diesem Rahmen verwalten wir die dafür zentralen (MUD-bezogenen) Komponenten von NAMIB: Controller und Enforcer.",
            "controller": {
                "title": "Controller",
                "description": "MUD-Manager",
                "description2": "generiert Firewall-Regeln aus MUDs"
            },
            "enforcer": {
                "title": "Enforcer",
                "description": "Dienst auf einem OpenWRT-Router",
                "description2": "wendet generierte Firewall-Regeln (durch nftnl) auf nf_tables an"
            },
            "muddles": {
                "title": "muddles",
                "description": "Setzt einen MUD Language Server prototypisch in Rust (mit tower-lsp) um. Dieser unterstützt beispielsweise die Vervollständigung von Policy-Namen und Warnungen bei Benutzung von YANG-ACL-Features, die MUD nicht unterstützt."
            }
        }
    },
    "cta": {
        "title": "Klingt Interessant?",
        "button-label": {
            "bachelor": "Zum digitalen Bachelor Projekttag",
            "master": "Zum Master Projekttag (soon™)"
        }
    },
    "imprint": {
        "title": "Impressum",
        "contact-inquiries": "Kontaktanfragen an",
        "enable-js": "Aktivieren Sie JavaScript, um die E-Mail Adresse anzuzeigen"
    },
    "projekttag": {
        "bachelor-title": "Bachelor Projekttag",
        "master-title": "Master Projekttag (soon™)",
        "redirecting": "Umleitung...",
        "no-js-click-here": "Klicken Sie hier, wenn Sie JavaScript deaktiviert haben:"
    }
}
